name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x, 21.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run format check
        run: npm run format:check

      - name: Run tests
        run: npm test

      - name: Test CLI functionality
        run: |
          node bin/deset --version
          node bin/deset --help
          node bin/deset init --dry-run
          node bin/deset check --no-interactive --format json

      - name: Upload coverage reports (Ubuntu + Node 20 only)
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        run: npm run test:coverage

      # NOTE: To enable Codecov integration, add CODECOV_TOKEN as a repository secret
      # and uncomment the following step:
      # - name: Upload coverage to Codecov
      #   if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      #   uses: codecov/codecov-action@v3
      #   with:
      #     token: REPLACE_WITH_CODECOV_TOKEN_SECRET
      #     files: ./coverage/lcov.info
      #     fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Test package build
        run: npm pack

      - name: Test global installation from tarball
        run: |
          TARBALL=$(ls *.tgz)
          npm install -g $TARBALL
          deset --version
          deset --help

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Run self-check
        run: node bin/deset check --no-interactive --format json

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and test
        run: |
          npm run test
          npm run lint

      # NOTE: To enable NPM publishing, add NPM_TOKEN as a repository secret
      # and uncomment the following step:
      # - name: Publish to NPM
      #   run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: REPLACE_WITH_NPM_TOKEN_SECRET
